# Utiliser une image Node.js Alpine comme base
# Alpine est une distribution légère qui réduit la taille de l'image finale
FROM node:lts-alpine 

# Définir le répertoire de travail dans le conteneur
# Tous les fichiers et commandes suivants seront exécutés dans ce répertoire
WORKDIR /usr/src/app

# Copier les fichiers package.json et pnpm-lock.yaml
# Cela permet d'installer uniquement les dépendances sans copier tout le projet,
# ce qui optimise le cache des couches Docker
COPY package.json pnpm-lock.yaml ./

# Installer les dépendances avec pnpm
# pnpm est un gestionnaire de paquets performant, 
# et nous l'installons globalement dans le conteneur
RUN npm install -g pnpm && pnpm install

# Copier le reste des fichiers du projet
# Cela inclut tous les fichiers nécessaires au fonctionnement de l'application
COPY . .

# Exposer le port sur lequel l'API écoute (par exemple 3000)
# Cela permet aux autres conteneurs ou services d'accéder à l'application via ce port
EXPOSE 3000

# Définir la commande de démarrage
# Cette commande est exécutée lorsque le conteneur démarre
# Ici, nous lançons l'application en mode développement avec nodemon
CMD [ "pnpm", "run", "dev" ]
